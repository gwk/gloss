# Dedicated to the public domain under CC0: https://creativecommons.org/publicdomain/zero/1.0/.

# convert terminal output to html, convert to rtf and copy to clipboard
ansi-to-rtf-clip: ansi-to-html "$@" | textutil -stdin -convert rtf -stdout | pbcopy

# python
py: PYTHONSTARTUP=$GLOSS_DIR/pythonstartup.py python3 -q "$@"
pdb: python3 -m pdb "$@" # run a python file using pdb
py-help: python3 -c "import $1; help($1);"
py-dir: python3 -c "import $1; print(*sorted(dir($1.$2)), sep='\n');"
py-dir-module: python3 -c "import $1; print(*sorted(dir($1)), sep='\n');"

# clang
clang-parse:  clang -fsyntax-only -Weverything "$@"
clang-pp:     clang "$@" -o - -E
clang-as:     clang "$@" -o - -S
clang-ir:     clang "$@" -o - -S -emit-llvm
clang-ast-dump: clang -cc1 -ast-dump "$@"
clang-show-defines: echo | clang -dM -E "$@" -

# diff files using git and same-same.
d: git diff --no-index --no-prefix --no-renames --no-color --exit-code "$@" | same-same

# git

ga: git add "$@"

gca:  git commit --amend -m "$(git log -1 --pretty=%B)" "$@" && gsh --stat
gcam: git commit --amend -m "$@" && gsh --stat
gcm:  git commit -m "$@" && gsh --stat

gd:  git diff "$@"
gds: git diff --staged "$@"

# git log format notes
# C: color function
# h: abbreviated commit hash
# cd: committer date
# d: ref names
# s: subject

gl:   git log --format="%C(blue)%ad %C(yellow)%h %C(cyan)%an %C(auto)%d %s" --date=iso "$@"
gl1:  git log --format="%C(blue)%ad %C(yellow)%h %C(cyan)%an %C(auto)%d %s" --date=iso -1 "$@"

glm:    git log "$@"
glm1:   git log -1 "$@"

# Note: -m flag "makes the merge commits show the full diff like regular commits"; documented in git-log "Diff Formatting".
glv:    git log --name-status -m "$@"
glv1:   git log --name-status -m -1 "$@"

gls: git ls-files "$@"

gm: git merge "$@"
gms: git merge --squash "$@"
gmff: git merge --ff-only "$@"

gpull:  git pull "$@"
gpush:  git push "$@"

gsh:    git show "$@"
gshw:   git show --color-words "$@"
gst:    git status --short --branch "$@"
gtags:  git tag -l "$@"

# file hashes.
sha1:   openssl dgst -sha1 "$@"
sha224: openssl dgst -sha224 "$@"
sha256: openssl dgst -sha256 "$@"
sha384: openssl dgst -sha384 "$@"
sha512: openssl dgst -sha512 "$@"

# SQLite.
sqlite-wal: for path in "$@"; do sqlite3 "$path" 'PRAGMA journal_mode=WAL;'; done

# pf
pfctl-f:  pfctl -F all -f /etc/pf.conf  # flush pf and reload the standard pf.conf
pfctl-nf: pfctl -nf /etc/pf.conf        # test the standard pf.conf
pfctl-s:  pfctl -s info | less          # get pf info

# translate
tr-to-lc: tr '[:upper:]' '[:lower:]' # translate to lower case
tr-to-uc: tr '[:lower:]' '[:upper:]' # translate to upper case

# misc
uuid4: python3 -c 'import uuid; print(uuid.uuid4())'
env-sort: env | sort | text-search -lines -pattern '^\w+=[^{]+' -match-only
ansi-to-html-view: ansi-to-html "$@" | html-view

calc-size: du -sh "$@"

calc-sizes: du -h -d 1 "$@"
